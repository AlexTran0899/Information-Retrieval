html
html
lang
en
prefix
og
http://ogp.me/ns
fb
http://ogp.me/ns/fb
class
no
js
meta
http
equiv
compatible
content
edge
script
type
text
javascript
window
init
privacy
cookies
enabled
true
ajax
deny
list
bam
nr
data
net
distributed
tracing
enabled
true
window
loader
config
agent
account
trust
key
xpid
dgg
license
key
dbeb
bb
application
for
license
information
please
see
nr
loader
spa
0
min
js
txt
var
use
strict
0
vp
fr
1
var
const
beacon
beacon
error
beacon
error
beacon
license
key
void
0
application
void
0
sa
void
0
queue
time
void
0
application
time
void
0
tt
guid
void
0
user
void
0
account
void
0
product
void
0
extra
void
0
js
attributes
user
attributes
void
0
atts
void
0
transaction
name
void
0
name
plain
void
0
function
if
throw
new
error
all
info
objects
require
an
agent
identifier
if
throw
new
error
info
for
concat
was
never
set
return
function
if
throw
new
error
all
info
objects
require
an
agent
identifier
0
const
0
info
var
const
if
string
typeof
return
1
try
document
create
document
fragment
query
selector
catch
return
1
return
0
var
const
data
nr
mask
const
mask
selector
block
selector
data
nr
block
mask
input
options
color
1
date
1
datetime
local
1
email
1
month
1
number
1
range
1
search
1
tel
1
text
1
time
1
url
1
week
1
textarea
1
select
1
password
0
return
ajax
deny
list
void
0
block
internal
0
enabled
0
harvest
time
seconds
10
auto
start
0
distributed
tracing
enabled
void
0
exclude
newrelic
header
void
0
cors
use
newrelic
header
void
0
cors
use
tracecontext
headers
void
0
allowed
origins
void
0
feature
flags
generic
events
enabled
0
harvest
time
seconds
30
auto
start
0
harvest
too
many
requests
delay
60
jserrors
enabled
0
harvest
time
seconds
10
auto
start
0
logging
enabled
0
harvest
time
seconds
10
auto
start
0
level
metrics
enabled
0
auto
start
0
obfuscate
void
0
page
action
enabled
0
page
view
event
enabled
0
auto
start
0
page
view
timing
enabled
0
harvest
time
seconds
30
long
task
1
auto
start
0
privacy
cookies
enabled
0
proxy
assets
void
0
beacon
void
0
session
expires
ms
wk
inactive
ms
session
replay
auto
start
0
enabled
1
harvest
time
seconds
60
preload
1
sampling
rate
10
error
sampling
rate
collect
fonts
1
inline
images
1
inline
stylesheet
0
fix
stylesheets
0
mask
all
inputs
0
get
mask
text
selector
return
mask
selector
set
mask
text
selector
mask
selector
concat
concat
null
mask
selector
0
5
get
block
class
return
nr
block
get
ignore
class
return
nr
ignore
get
mask
text
class
return
nr
mask
get
block
selector
return
block
selector
set
block
selector
block
selector
concat
0
6
get
mask
input
options
return
mask
input
options
set
mask
input
options
object
typeof
mask
input
options
password
0
0
7
session
trace
enabled
0
harvest
time
seconds
10
auto
start
0
soft
navigations
enabled
0
harvest
time
seconds
10
auto
start
0
spa
enabled
0
harvest
time
seconds
10
auto
start
0
ssl
void
0
all
configuration
objects
require
an
agent
identifier
function
if
throw
new
error
if
throw
new
error
configuration
for
concat
was
never
set
return
function
if
throw
new
error
0
const
0
init
function
if
throw
new
error
var
if
for
var
split
0
use
strict
var
function
try
if
object
typeof
return
0
3
if
object
typeof
return
0
4
const
object
create
object
get
prototype
of
object
get
own
property
descriptors
0
object
keys
length
for
let
in
if
void
0
try
if
null
null
continue
array
is
array
array
is
array
array
from
new
set
object
typeof
object
typeof
catch
0
1
return
catch
0
2
use
strict
3
xs
yq
xv
const
0
0
alpha
12
use
strict
4
vr
bv
gm
mw
sb
var
const
undefined
typeof
window
window
document
undefined
typeof
worker
global
scope
undefined
typeof
self
self
instanceof
worker
global
scope
self
navigator
instanceof
worker
navigator
undefined
typeof
global
this
global
this
instanceof
worker
global
scope
global
this
navigator
instanceof
worker
navigator
window
undefined
typeof
worker
global
scope
undefined
typeof
self
self
instanceof
worker
global
scope
self
undefined
typeof
global
this
global
this
instanceof
worker
global
scope
global
this
complete
document
ready
state
boolean
hidden
document
visibility
state
location
pad
phone
pod
test
navigator
user
agent
undefined
typeof
shared
worker
const
navigator
user
agent
match
firefox
return
array
is
array
length
2
1
0
navigator
send
beacon
date
now
0
use
strict
var
const
agent
identifier
ee
void
0
class
constructor
try
if
object
typeof
return
0
8
this
shared
context
object
assign
this
shared
context
object
entries
for
each
let
object
keys
includes
this
shared
context
catch
0
9
use
strict
xv
var
function
if
return
1
if
0
length
return
0
for
var
0
length
var
if
hostname
return
1
if
hostname
hostname
pathname
pathname
return
1
return
0
function
return
void
0
hostname
function
if
length
for
var
0
length
let
if
continue
0
index
of
http
substring
7
0
index
of
https
substring
8
const
index
of
let
0
substring
0
substring
let
split
push
hostname
pathname
function
return
length
length
index
of
length
length
function
return
0
index
of
substring
1
0
index
of
substring
1
use
strict
ak
ze
3
var
const
function
const
staged
1
priority
0
get
set
function
get
delete
1
size
function
if
throw
new
error
agent
identifier
required
new
map
function
let
arguments
length
0
void
0
arguments
0
arguments
0
arguments
length
1
void
0
arguments
1
arguments
1
feature
arguments
length
2
void
0
arguments
2
arguments
2
if
get
return
get
staged
0
function
const
array
from
every
let
return
staged
sort
1
priority
1
priority
for
each
let
delete
function
let
arguments
length
2
void
0
arguments
2
arguments
2
const
ee
get
ee
handlers
if
aborted
backlog
if
const
backlog
if
for
let
0
let
object
values
for
each
0
on
1
isolated
backlog
delete
backlog
null
emit
drain
function
var
1
object
values
for
each
var
0
if
0
var
1
3
2
apply
use
strict
ee
var
const
nr
context
concat
function
var
1
try
16
length
0
fr
isolated
backlog
catch
var
on
add
event
listener
remove
event
listener
function
var
if
return
for
var
0
let
in
abort
function
aborted
0
object
keys
backlog
for
each
delete
backlog
is
buffering
function
return
debug
id
backlog
object
typeof
backlog
backlog
isolated
backlog
return
object
define
property
aborted
get
let
aborted
1
return
aborted
function
return
instanceof
0
new
new
function
concat
function
return
function
return
function
return
backlog
void
0
global
0
zm
ee
ee
use
strict
class
constructor
this
context
id
use
strict
var
ee
get
handle
function
buffer
emit
buffer
emit
use
strict
var
on
var
handlers
function
function
feature
var
push
use
strict
sp
var
let
1
1
try
const
get
passive
return
0
1
get
signal
return
0
1
gm
add
event
listener
test
null
gm
remove
event
listener
test
null
catch
function
return
capture
passive
signal
function
let
arguments
length
2
void
0
arguments
2
arguments
2
arguments
length
3
arguments
3
void
0
window
add
event
listener
function
let
arguments
length
2
void
0
arguments
2
arguments
2
arguments
length
3
arguments
3
void
0
document
add
event
listener
use
strict
const
0
bz
use
strict
bz
el
var
const
xxxxxxxx
xxxx
4
xxx
yxxx
xxxxxxxxxxxx
function
return
15
16
math
random
0
function
const
gm
crypto
gm
ms
crypto
let
0
return
get
random
values
get
random
values
new
uint
8
array
30
split
map
to
string
16
3
8
to
string
16
join
function
const
gm
crypto
gm
ms
crypto
let
0
get
random
values
get
random
values
new
uint
8
array
const
for
var
0
use
strict
3
uh
wk
const
session
started
session
pause
session
reset
session
resume
session
update
same
tab
cross
tab
0
1
2
use
strict
function
return
math
floor
performance
now
use
strict
var
function
if
0
index
of
data
return
protocol
data
try
const
new
location
href
port
port
hostname
hostname
pathname
pathname
search
search
protocol
protocol
slice
0
protocol
index
of
same
origin
protocol
gm
location
protocol
host
gm
location
host
return
port
port
http
protocol
port
80
https
protocol
port
pathname
pathname
pathname
starts
with
pathname
concat
pathname
pathname
catch
return
use
strict
function
function
typeof
console
debug
console
debug
new
relic
warning
https://github.com/newrelic/newrelic-browser-agent/blob/main/docs/warning-codes.md
concat
use
strict
var
const
newrelic
const
new
set
function
const
ee
get
object
typeof
has
emit
rumresp
add
function
let
arguments
length
0
void
0
arguments
0
arguments
0
try
gm
dispatch
event
new
custom
event
detail
catch
loaded
0
use
strict
var
object
prototype
has
own
property
function
if
call
return
var
if
object
define
property
object
keys
try
return
object
define
property
value
writable
0
enumerable
1
catch
return
use
strict
function
var
this
let
arguments
length
1
void
0
arguments
1
arguments
1
arguments
length
2
void
0
arguments
2
arguments
2
const
leading
1
let
return
function
for
var
arguments
length
new
array
0
clear
timeout
clear
timeout
set
timeout
apply
function
var
this
let
1
return
function
if
0
for
var
arguments
length
new
array
0
use
strict
var
const
const
new
weak
set
return
if
object
typeof
null
if
has
return
add
return
function
try
return
stringify
catch
try
ee
emit
internal
error
catch
use
strict
var
function
return
undefined
typeof
document
complete
document
ready
state
function
if
return
0
sp
load
function
if
return
0
content
loaded
use
strict
zm
var
const
beacon
bam
nr
data
net
error
beacon
bam
nr
data
net
function
return
gm
gm
void
0
gm
newrelic
gm
newrelic
gm
gm
function
let
return
gm
set
timeout
gm
set
immediate
gm
clear
timeout
gm
http
request
gm
request
gm
event
gm
promise
gm
mutation
observer
gm
fetch
function
let
initialized
agents
initialized
at
ms
0
date
new
date
initialized
agents
function
let
return
initialized
agents
function
function
return
function
let
const
info
info
beacon
beacon
error
beacon
error
beacon
function
let
const
init
init
function
let
const
loader
config
loader
config
use
strict
var
function
let
arguments
length
1
void
0
arguments
1
arguments
1
arguments
length
2
arguments
2
void
0
arguments
length
3
arguments
3
void
0
0
visibilitychange
function
if
return
void
hidden
document
visibility
state
document
visibility
state
use
strict
um
ri
ak
8
var
const
gm
http
request
add
event
listener
remove
event
listener
nr
wrapped
concat
function
var
function
return
ee
get
events
if
debug
id
return
debug
id
1
var
0
0
function
in
place
function
return
1
return
get
prototype
of
in
object
document
gm
prototype
on
start
function
var
1
if
null
function
typeof
object
typeof
var
0
function
var
object
function
if
function
typeof
handle
event
return
return
handle
event
apply
arguments
function
typeof
return
fn
null
name
anonymous
this
wrapped
1
on
start
function
1
this
wrapped
1
function
let
for
object
typeof
object
prototype
has
own
property
call
object
get
prototype
of
for
var
arguments
length
new
array
2
2
gm
fetch
on
end
function
var
this
if
var
headers
get
content
length
null
rx
size
emit
done
null
else
emit
done
const
push
state
replace
state
function
const
function
return
ee
get
history
return
debug
id
debug
id
1
0
in
place
window
history
var
const
append
child
insert
before
replace
child
function
const
function
return
ee
get
jsonp
if
debug
id
return
debug
id
0
var
0
callback
cb
function
if
return
const
match
1
return
3
return
in
place
node
prototype
dom
on
dom
start
function
function
if
string
typeof
node
name
script
node
name
to
lower
case
return
if
function
typeof
add
event
listener
return
var
src
match
1
null
var
if
return
var
function
var
match
if
length
3
return
key
2
parent
1
window
return
key
parent
window
if
function
typeof
parent
key
return
var
function
emit
jsonp
end
remove
event
listener
load
0
1
remove
event
listener
error
0
1
function
emit
jsonp
error
emit
jsonp
end
remove
event
listener
load
0
1
remove
event
listener
error
0
1
in
place
parent
key
cb
add
event
listener
load
0
1
add
event
listener
error
0
1
emit
new
jsonp
src
0
const
function
const
function
return
ee
get
mutation
if
debug
id
return
debug
id
0
var
0
gm
mutation
observer
return
window
mutation
observer
function
return
this
instanceof
new
fn
apply
this
arguments
mutation
observer
prototype
prototype
const
function
const
function
return
ee
get
promise
if
debug
id
return
debug
id
0
var
context
0
gm
promise
return
function
function
var
context
executor
null
1
const
reflect
construct
return
context
get
ctx
function
return
gm
promise
object
define
property
name
value
promise
to
string
function
return
to
string
object
set
prototype
of
all
race
for
each
function
const
function
let
1
for
each
this
resolve
then
all
1
const
apply
this
arguments
return
function
return
function
emit
propagate
null
1
1
resolve
reject
for
each
function
const
function
const
apply
this
arguments
return
emit
propagate
0
1
1
prototype
prototype
const
prototype
then
prototype
then
function
var
this
promise
for
var
arguments
length
new
array
0
3
resolved
resolved
0
emit
xhr
resolved
in
place
fn
0
1
catch
0
15
try
emit
internal
error
catch
var
return
function
in
place
onreadystatechange
fn
if
function
for
var
in
prototype
prototype
in
place
prototype
xhr
on
send
xhr
start
function
function
push
then
data
on
open
xhr
start
var
resolve
if
var
1
document
create
text
node
new
observe
character
data
0
else
on
fn
end
function
0
0
type
function
for
var
0
use
strict
jt
var
const
nr
original
concat
var
object
prototype
has
own
property
1
function
return
ee
in
place
function
const
char
at
0
for
let
0
use
strict
const
ajax
use
strict
const
generic
events
use
strict
const
jserrors
use
strict
it
var
const
log
logging
use
strict
var
function
let
arguments
length
2
void
0
arguments
2
arguments
2
arguments
length
3
void
0
arguments
3
arguments
3
0
logging
concat
to
lower
case
called
void
0
metrics
0
0
void
0
logging
function
return
string
typeof
object
values
some
use
strict
rs
const
metrics
sm
cm
store
supportability
metrics
store
event
metrics
use
strict
const
page
view
event
use
strict
const
page
view
timing
use
strict
4
it
no
qb
ug
bc
var
const
session
replay
record
replay
pause
replay
replay
running
error
during
replay
12
dom
content
loaded
0
load
1
full
snapshot
2
incremental
snapshot
3
meta
4
custom
5
0
message
session
was
reset
sm
reset
message
recorder
failed
to
import
sm
import
message
too
many
requests
sm
too
many
message
payload
was
too
large
sm
too
big
message
session
entity
was
set
to
on
another
tab
sm
cross
tab
message
session
replay
is
not
allowed
and
will
not
be
started
sm
entitlement
api
use
strict
aw
var
function
return
0
0
0
session
trace
enabled
function
return
0
0
session
replay
preload
function
const
correct
absolute
timestamp
return
original
timestamp
corrected
timestamp
timestamp
diff
origin
time
corrected
origin
time
corrected
origin
time
origin
time
diff
math
floor
corrected
origin
time
use
strict
he
kp
lc
rz
3
jx
const
session
trace
bst
resource
resource
start
end
fn
fn
push
state
use
strict
2
qu
ih
var
const
click
keydown
submit
api
soft
nav
1
2
1
2
3
4
in
progress
finished
cancelled
use
strict
kp
3
lc
6
3
5
gx
9
op
rw
xq
var
const
spa
click
submit
keypress
keydown
keyup
change
fn
start
fn
end
cb
start
api
ixn
remaining
interaction
spa
node
jsonp
node
fetch
start
fetch
done
fetch
body
jsonp
end
start
end
body
cb
js
time
fetch
use
strict
var
class
constructor
this
agent
identifier
this
aggregator
this
ee
ee
get
this
feature
name
this
blocked
1
use
strict
var
const
0
0
privacy
cookies
enabled
use
strict
var
const
set
error
handler
finished
add
to
trace
add
release
add
page
action
set
current
route
name
set
page
view
name
set
custom
attribute
interaction
notice
error
set
user
id
set
application
version
start
4
4
log
wrap
logger
set
error
handler
finished
add
to
trace
add
release
var
function
if
object
typeof
string
typeof
function
typeof
return
0
29
const
function
return
ee
get
logger
0
new
return
level
level
custom
attributes
custom
attributes
in
place
wrap
logger
function
const
0
for
each
function
for
var
arguments
length
new
array
0
1
1
api
exposed
api
push
api
0
38
length
1
0
const
var
const
const
starts
with
http
https
let
1
function
let
arguments
length
1
void
0
arguments
1
arguments
1
arguments
length
2
arguments
2
void
0
arguments
length
3
arguments
3
void
0
init
info
loader
config
runtime
exposed
0
loader
type
const
0
init
info
loader
config
0
agent
identifier
0
agent
identifier
js
attributes
bv
js
attributes
is
worker
0
0
1
agent
identifier
const
0
0
agent
identifier
beacon
error
beacon
proxy
assets
proxy
assets
push
proxy
assets
proxy
beacon
push
proxy
beacon
0
activated
features
run
soft
nav
over
spa
0
soft
navigations
enabled
feature
flags
includes
soft
nav
deny
list
ajax
deny
list
ajax
block
internal
ptid
agent
identifier
0
agent
identifier
ee
ee
get
agent
identifier
void
0
api
api
function
let
arguments
length
2
void
0
arguments
2
arguments
2
0
ak
api
const
var
ee
get
get
tracer
on
4
var
api
ixn
function
const
0
vp
return
null
delete
js
attributes
0
1
js
attributes
js
attributes
0
null
session
void
0
function
log
function
let
custom
attributes
level
arguments
length
1
void
0
arguments
1
arguments
1
0
log
called
void
0
metrics
0
wrap
logger
function
let
custom
attributes
level
arguments
length
2
void
0
arguments
2
arguments
2
0
wrap
logger
called
void
0
metrics
custom
attributes
level
for
each
0
api
add
page
action
add
page
action
0
generic
events
set
page
view
name
function
if
string
typeof
return
char
at
0
0
fr
custom
transaction
http://custom.transa
ction
set
page
view
name
0
set
custom
attribute
function
let
arguments
length
2
void
0
arguments
2
arguments
2
if
string
typeof
if
string
number
boolean
includes
typeof
null
return
set
custom
attribute
0
40
typeof
else
0
39
typeof
set
user
id
function
if
string
typeof
null
return
enduser
id
set
user
id
0
0
41
typeof
set
application
version
function
if
string
typeof
null
return
application
version
set
application
version
1
0
42
typeof
start
try
0
start
called
void
0
metrics
emit
manual
start
all
catch
0
23
4
function
0
record
replay
called
void
0
metrics
0
4
void
0
session
replay
4
function
0
pause
replay
called
void
0
metrics
0
4
void
0
session
replay
interaction
function
return
new
get
object
typeof
const
prototype
create
tracer
function
var
this
function
typeof
return
0
create
tracer
called
void
0
metrics
0
tracer
0
spa
function
if
emit
no
fn
start
0
try
return
apply
this
arguments
catch
const
string
typeof
new
error
throw
emit
fn
err
arguments
this
finally
emit
fn
end
0
function
return
function
return
0
called
void
0
metrics
0
0
arguments
null
this
void
0
this
function
then
bind
then
let
set
0
ze
api
catch
0
27
abort
return
action
text
set
name
set
attribute
save
ignore
on
end
get
context
end
get
for
each
void
0
soft
nav
spa
set
current
route
name
route
name
void
0
soft
nav
route
name
0
spa
notice
error
function
string
typeof
new
error
0
notice
error
called
void
0
metrics
0
err
0
1
void
0
jserrors
0
0
agent
identifier
run
soft
nav
over
spa
void
0
exposed
exposed
0
nc
try
return
document
current
script
nonce
catch
return
use
strict
const
ajax
ajax
generic
events
generic
events
jserrors
jserrors
logging
logging
metrics
metrics
page
action
page
action
page
view
event
page
view
event
page
view
timing
page
view
timing
session
replay
session
replay
session
trace
session
trace
soft
nav
soft
navigations
spa
spa
page
view
event
1
page
view
timing
2
metrics
3
jserrors
4
spa
5
ajax
6
session
trace
7
soft
nav
8
session
replay
9
logging
10
generic
events
11
function
var
if
void
0
return
exports
var
exports
return
exports
exports
for
var
in
object
define
property
enumerable
0
get
promise
all
object
keys
reduce
nr
spa
compressor
nr
spa
recorder
nr
spa
0
min
js
object
prototype
has
own
property
call
0
if
push
else
var
if
void
0
for
var
document
get
elements
by
tag
name
script
0
length
var
if
get
attribute
src
get
attribute
data
webpack
break
if
0
var
sha
mc
vw
1
hjj
uf
5
4
wen
1
ulo
07
dc
8
38
9
3
2
kys
buvqeh
yv
hc
ithg
sha
yi
5
mr
zcfv
9
upxp
9
dvx
9
qis
5
iv
ok
kb
5
kv
nw
7
8
tzy
2
lp
lmq
hx
2
cg
sha
pdn
6
xh
2
qo
zg
ap
gom
ea
bt
jfy
gc
bu
9
pt
7
6
sch
tqs
6
bcr
no
php
mq
2
wkn
document
create
element
script
charset
utf
8
timeout
nc
set
attribute
nonce
nc
set
attribute
data
webpack
src
0
src
index
of
window
location
origin
cross
origin
anonymous
integrity
var
onerror
onload
null
clear
timeout
var
if
delete
parent
node
parent
node
remove
child
for
each
return
set
timeout
bind
null
void
0
type
timeout
target
onerror
bind
null
onerror
onload
bind
null
onload
document
head
append
child
undefined
typeof
symbol
symbol
to
string
tag
object
define
property
symbol
to
string
tag
value
module
object
define
property
es
module
value
0
https://js-agent.newrelic.com/
var
var
void
0
if
0
if
push
2
else
var
new
promise
push
2
var
new
error
if
0
void
0
var
load
type
missing
type
target
target
src
message
loading
chunk
failed
name
chunk
load
error
type
request
1
chunk
var
var
0
if
some
0
for
in
if
for
use
strict
var
class
agent
identifier
constructor
let
arguments
length
0
void
0
arguments
0
arguments
0
0
16
this
agent
identifier
for
var
arguments
length
new
array
1
1
function
return
0
0
concat
enabled
var
var
class
extends
constructor
let
arguments
length
3
void
0
arguments
3
arguments
3
super
this
auto
this
abort
handler
void
0
this
feat
aggregate
void
0
this
on
aggregate
imported
void
0
1
0
this
agent
identifier
concat
this
feature
name
auto
start
this
auto
1
this
auto
0
ak
this
ee
on
manual
start
all
0
0
ak
this
agent
identifier
this
feature
name
this
auto
0
this
import
aggregator
import
aggregator
let
arguments
length
0
void
0
arguments
0
arguments
0
if
this
feat
aggregate
this
auto
return
this
on
aggregate
imported
new
promise
const
async
let
try
if
0
this
agent
identifier
const
setup
agent
session
await
then
bind
this
agent
identifier
catch
0
20
this
ee
emit
internal
error
this
feature
name
session
replay
this
abort
handler
try
if
this
this
feature
name
return
0
ze
this
agent
identifier
this
feature
name
void
1
const
lazy
feature
loader
await
then
bind
aggregate
await
this
feature
name
aggregate
this
feat
aggregate
new
this
agent
identifier
this
aggregator
0
catch
0
34
this
abort
handler
0
ze
this
agent
identifier
this
feature
name
0
1
this
ee
this
ee
abort
0
0
switch
case
session
replay
return
0
this
agent
identifier
case
session
trace
return
default
return
0
var
class
extends
static
feature
name
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
this
import
aggregator
var
class
extends
constructor
super
this
aggregated
data
store
var
this
get
bucket
return
metrics
function
count
0
return
count
1
object
entries
for
each
let
metrics
merge
var
this
get
bucket
if
metrics
var
metrics
count
count
object
keys
for
each
if
count
var
function
if
return
return
min
math
min
min
min
max
math
max
max
max
sos
sos
else
metrics
store
metric
var
this
get
bucket
return
stats
stats
get
bucket
this
aggregated
data
this
aggregated
data
var
this
aggregated
data
return
this
aggregated
data
params
custom
get
return
this
aggregated
data
this
aggregated
data
this
aggregated
data
take
for
var
1
0
max
max
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
0
0
doc
hidden
0
void
0
this
ee
0
0
sp
pagehide
0
win
pagehide
0
void
0
this
ee
this
import
aggregator
var
class
extends
static
feature
name
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
this
import
aggregator
var
class
constructor
this
name
uncaught
error
this
message
string
typeof
0
this
source
this
line
this
column
this
newrelic
function
return
new
void
0
message
message
filename
source
lineno
line
colno
col
newrelic
function
let
unhandled
promise
rejection
if
reason
try
return
reason
message
reason
message
reason
catch
return
reason
if
void
0
reason
return
const
reason
return
message
message
function
if
error
instanceof
syntax
error
test
error
stack
trim
const
new
message
filename
lineno
colno
error
newrelic
return
name
syntax
error
name
return
error
error
function
return
instanceof
error
stack
class
extends
static
feature
name
1
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
try
this
remove
on
abort
new
abort
controller
catch
this
ee
on
internal
error
this
abort
handler
0
ierr
0
0
this
void
0
this
feature
name
this
ee
this
ee
on
4
this
gm
add
event
listener
unhandledrejection
this
abort
handler
0
err
0
1
unhandled
promise
rejection
1
this
void
0
this
feature
name
this
ee
0
1
this
remove
on
abort
signal
gm
add
event
listener
error
this
abort
handler
0
err
0
1
this
void
0
this
feature
name
this
ee
0
1
this
remove
on
abort
signal
this
abort
handler
this
this
import
aggregator
this
remove
on
abort
abort
this
abort
handler
void
0
var
let
1
const
nr
id
function
const
typeof
return
object
function
1
gm
0
0
function
return
function
if
string
typeof
length
return
length
if
object
typeof
if
undefined
typeof
array
buffer
instanceof
array
buffer
byte
length
return
byte
length
if
undefined
typeof
blob
instanceof
blob
size
return
size
if
undefined
typeof
form
data
instanceof
form
data
try
return
0
length
catch
return
var
class
constructor
this
agent
identifier
generate
trace
payload
if
this
should
generate
trace
return
null
var
0
this
agent
identifier
if
return
null
var
account
to
string
null
agent
to
string
null
trust
key
to
string
null
if
return
null
var
0
0
el
date
now
span
id
trace
id
timestamp
return
same
origin
this
is
allowed
origin
this
use
trace
context
headers
for
cors
trace
context
parent
header
this
generate
trace
context
parent
header
trace
context
state
header
this
generate
trace
context
state
header
same
origin
this
exclude
newrelic
header
same
origin
this
is
allowed
origin
this
use
newrelic
header
for
cors
newrelic
header
this
generate
trace
header
generate
trace
context
parent
header
return
00
01
generate
trace
context
state
header
return
nr
generate
trace
header
if
function
typeof
gm
btoa
return
null
var
ty
browser
ac
ap
id
tr
ti
return
tk
btoa
0
should
generate
trace
return
this
is
dt
enabled
this
is
allowed
origin
is
allowed
origin
var
1
if
0
this
agent
identifier
distributed
tracing
0
0
this
agent
identifier
distributed
tracing
same
origin
0
else
if
allowed
origins
instanceof
array
for
var
0
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
this
dt
new
this
handler
0
this
ee
try
const
xmlhttprequest
xhr
fetch
fetch
beacon
beacon
gm
performance
get
entries
by
type
resource
for
each
if
initiator
type
in
0
response
status
const
status
response
status
rx
size
transfer
size
duration
math
floor
duration
cb
time
0
ne
name
this
handler
xhr
start
time
response
end
initiator
type
void
0
ajax
catch
0
this
ee
0
this
ee
function
function
var
this
total
cbs
0
called
0
cb
time
0
end
ended
1
xhr
guids
last
size
null
load
capture
called
1
params
this
params
metrics
this
metrics
add
event
listener
load
function
0
1
add
event
listener
progress
function
last
size
loaded
0
1
function
this
params
method
0
ne
this
1
this
metrics
function
var
0
xpid
this
same
origin
set
request
header
new
relic
xpid
var
generate
trace
payload
this
parsed
origin
if
var
1
newrelic
header
set
request
header
newrelic
newrelic
header
0
trace
context
parent
header
set
request
header
traceparent
trace
context
parent
header
trace
context
state
header
set
request
header
tracestate
trace
context
state
header
0
this
dt
function
var
this
metrics
0
this
if
var
tx
size
this
start
time
0
this
body
this
listener
function
try
abort
type
load
capture
called
params
aborted
0
load
type
called
total
cbs
onload
called
function
typeof
onload
function
typeof
end
end
catch
try
emit
internal
error
catch
for
var
0
1
1
push
function
var
1
return
newrelic
header
set
newrelic
newrelic
header
0
trace
context
parent
header
set
traceparent
trace
context
parent
header
trace
context
state
header
set
tracestate
trace
context
state
header
0
function
this
params
this
metrics
this
start
time
0
this
dt
length
1
this
target
0
length
2
this
opts
1
var
this
opts
this
target
string
typeof
object
typeof
instanceof
ee
url
gm
object
typeof
instanceof
href
ne
this
var
instanceof
ee
method
method
to
upper
case
this
params
method
this
body
body
this
tx
size
body
0
function
if
this
end
time
0
this
params
this
params
0
this
params
return
let
this
params
status
status
0
string
typeof
this
rx
size
this
rx
size
length
0
this
rx
size
const
tx
size
this
tx
size
rx
size
duration
0
this
start
time
xhr
this
params
this
start
time
this
end
time
fetch
this
ajax
function
const
this
params
this
metrics
if
this
ended
this
ended
0
for
let
0
remove
event
listener
this
listener
1
aborted
0
duration
0
this
start
time
this
load
capture
called
4
ready
state
null
status
status
0
this
cb
time
this
cb
time
xhr
this
start
time
this
end
time
xhr
this
ajax
function
params
status
status
var
function
var
response
type
return
json
null
arraybuffer
blob
json
response
text
void
0
response
text
void
0
last
size
if
metrics
rx
size
same
origin
var
get
response
header
new
relic
app
data
0
rs
ajax
cross
application
tracing
header
seen
void
0
metrics
params
cat
split
pop
load
capture
called
0
on
new
xhr
on
open
xhr
start
on
open
xhr
end
on
send
xhr
start
on
xhr
cb
time
on
xhr
load
added
on
xhr
load
removed
on
xhr
resolved
on
add
event
listener
end
on
remove
event
listener
end
on
fn
end
on
fetch
before
start
on
fetch
start
on
fn
start
on
fetch
done
this
ee
this
handler
this
dt
this
import
aggregator
function
ne
var
0
params
hostname
hostname
port
port
protocol
protocol
host
hostname
port
pathname
pathname
parsed
origin
same
origin
same
origin
var
ie
const
he
oe
ae
3
se
kp
ce
ue
lc
de
le
rz
fe
ie
class
he
extends
static
feature
name
ue
constructor
super
ue
arguments
length
2
void
0
arguments
2
arguments
2
if
0
this
agent
identifier
return
void
0
3
this
agent
identifier
this
feature
name
const
this
ee
let
0
this
events
0
um
this
events
on
le
function
this
bst
start
0
this
events
on
de
function
0
bst
0
this
bst
start
0
void
0
session
trace
on
fe
se
function
this
time
0
this
start
path
location
pathname
location
hash
on
fe
ce
function
0
bst
hist
location
pathname
location
hash
this
start
path
this
time
void
0
session
trace
try
new
performance
observer
const
get
entries
0
oe
void
0
session
trace
observe
type
ae
buffered
0
catch
this
import
aggregator
resource
observer
var
ge
class
pe
extends
static
feature
name
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
this
replay
running
1
try
parse
local
storage
get
item
concat
ge
3
concat
ge
uh
catch
0
this
ee
on
4
this
this
this
session
replay
mode
this
this
import
aggregator
this
ee
on
err
this
replay
running
this
error
noticed
0
0
4
void
0
this
feature
name
this
ee
this
ee
on
4
this
replay
running
return
session
replay
mode
ge
session
replay
mode
ge
0
aw
this
agent
identifier
1
async
if
this
this
0
try
const
recorder
await
promise
all
then
bind
this
recorder
new
mode
this
agent
identifier
this
agent
identifier
trigger
ee
this
ee
this
recorder
start
recording
this
abort
handler
this
recorder
stop
recording
catch
this
import
aggregator
recorder
this
recorder
error
noticed
this
error
noticed
this
feat
aggregate
this
feat
aggregate
mode
ge
this
feat
aggregate
initialize
recording
ge
0
this
ge
this
qb
this
recorder
this
recorder
parent
mode
ge
this
recorder
parent
mode
ge
this
recorder
stop
recording
this
recorder
start
recording
this
abort
handler
this
recorder
stop
recording
var
me
class
ve
extends
static
feature
name
me
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
if
super
me
return
const
0
this
ee
0
um
this
ee
0
new
0
window
location
void
0
this
feature
name
this
ee
on
push
state
end
on
replace
state
end
try
this
remove
on
abort
new
abort
controller
catch
0
sp
popstate
0
new
time
stamp
window
location
void
0
this
feature
name
this
ee
0
this
remove
on
abort
signal
let
1
const
new
0
request
animation
frame
0
new
dom
0
void
0
this
feature
name
this
ee
1
0
0
new
event
void
0
this
feature
name
this
ee
observe
document
body
attributes
0
child
list
0
subtree
0
character
data
0
leading
0
on
fn
start
let
me
includes
type
for
let
of
me
document
add
event
listener
this
abort
handler
function
this
remove
on
abort
abort
disconnect
this
abort
handler
void
0
this
import
aggregator
dom
observer
var
be
const
ye
3
we
kp
re
xe
te
5
ae
ee
ne
rw
se
lc
oe
be
class
ie
extends
static
feature
name
ye
constructor
var
if
super
ye
arguments
length
2
void
0
arguments
2
arguments
2
this
return
try
this
remove
on
abort
new
abort
controller
catch
let
0
const
this
ee
get
tracer
0
ri
this
ee
0
8
this
ee
0
this
ee
0
this
ee
this
ee
get
events
0
this
ee
0
this
ee
0
ak
this
ee
function
emit
new
window
location
function
window
location
hash
this
ne
0
function
window
location
hash
0
0
var
0
this
ae
this
ae
this
ne
this
oe
function
on
function
this
0
this
ee
on
ne
on
se
on
se
this
ee
on
oe
on
te
on
te
this
ee
on
fn
err
function
for
var
arguments
length
new
array
0
1
0
0
this
remove
on
abort
signal
this
abort
handler
this
this
import
aggregator
this
remove
on
abort
abort
this
abort
handler
void
0
var
class
je
extends
static
feature
name
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
0
this
agent
identifier
page
action
enabled
some
this
import
aggregator
0
3
this
agent
identifier
this
feature
name
var
pe
ce
class
ke
extends
static
feature
name
pe
constructor
let
arguments
length
2
void
0
arguments
2
arguments
2
super
pe
const
this
ee
this
ee
on
wrap
logger
end
function
let
const
level
custom
attributes
this
0
ce
this
import
aggregator
new
class
extends
constructor
super
gm
this
shared
aggregator
new
agent
identifier
this
agent
identifier
this
features
0
this
agent
identifier
this
this
desired
features
new
set
features
this
desired
features
add
this
run
soft
nav
over
spa
this
desired
features
some
feature
name
soft
nav
0
this
loader
type
agent
this
run
0
21
get
config
return
info
this
info
init
this
init
loader
config
this
loader
config
runtime
this
runtime
run
try
const
this
agent
identifier
this
desired
features
sort
feature
name
feature
name
for
each
if
feature
name
feature
name
page
view
event
return
if
this
run
soft
nav
over
spa
feature
name
spa
return
if
this
run
soft
nav
over
spa
feature
name
soft
nav
return
function
switch
case
ajax
return
jserrors
case
session
trace
return
ajax
page
view
event
case
session
replay
return
session
trace
case
page
view
timing
return
page
view
event
default
return
feature
name
every
in
this
features
0
36
feature
name
this
features
feature
name
new
this
agent
identifier
this
shared
aggregator
catch
0
22
for
const
in
this
features
this
features
abort
handler
const
0
zm
delete
initialized
agents
this
agent
identifier
api
delete
initialized
agents
this
agent
identifier
features
delete
this
shared
aggregator
return
ee
get
this
agent
identifier
abort
1
features
re
he
pe
je
ke
ve
ie
loader
type
spa
script
type
text
javascript
src
https://www.stanford.edu/wp-content/plugins/awesome-weather-pro/js/awesome-weather-widget-frontend.js
ver
id
awesome
weather
pro
js
script
type
text
javascript
src
https://www.stanford.edu/wp-content/plugins/awesome-weather-pro/js/js-cookie.js
ver
id
js
cookie
js
script
type
text
javascript
src
https://www.stanford.edu/wp-content/themes/homesite17/js/dist/master.min.js
ver
26
id
homesite
17
master
scripts
js
script
type
text
javascript
window
info
beacon
bam
nr
data
net
license
key
dbeb
bb
application
transaction
name
mlc
wx
bx
cgsd
vo
gx
xw
queue
time
0
application
time
atts
hh
fwp
8
error
beacon
bam
nr
data
net
agent
